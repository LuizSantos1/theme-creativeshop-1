<?php
// @codingStandardsIgnoreFile

/* @var $block \Magento\Catalog\Block\Product\AbstractProduct */
?>

<?php
switch ($type = $block->getType()) {

    case 'related-rule':
        if ($exist = $block->hasItems()) {
            $type = 'related';
            $class = $type;

            $image = 'related_products_list';
            $title = __('Related Products');
            $items = $block->getAllItems();
            $limit = $block->getPositionLimit();
            $shuffle = (int) $block->isShuffled();
            $canItemsAddToCart = $block->canItemsAddToCart();

            $showAddTo = true;
            $showCart = false;
            $templateType = null;
            $description = false;
        }
    break;

    case 'related':
        /** @var \Magento\Catalog\Block\Product\ProductList\Related $block */
        if ($exist = $block->getItems()->getSize()) {
            $type = 'related';
            $class = $type;

            $image = 'related_products_list';
            $title = __('Related Products');
            $items = $block->getItems();
            $limit = 0;
            $shuffle = 0;
            $canItemsAddToCart = $block->canItemsAddToCart();

            $showAddTo = true;
            $showCart = false;
            $templateType = null;
            $description = false;
        }
    break;

    case 'upsell-rule':
        if ($exist = $block->hasItems()) {
            $type = 'upsell';
            $class = $type;

            $image = 'upsell_products_list';
            $title = __('You might like...');
            $items = $block->getAllItems();
            $limit = $block->getPositionLimit();
            $shuffle = (int) $block->isShuffled();

            $showAddTo = false;
            $showCart = false;
            $templateType = null;
            $description = false;
            $canItemsAddToCart = false;
        }
    break;

    case 'upsell':
        /** @var \Magento\Catalog\Block\Product\ProductList\Upsell $block */
        if ($exist = count($block->getItemCollection()->getItems())) {
            $type = 'upsell';
            $class = $type;

            $image = 'upsell_products_list';
            $title = __('You might like...');
            $items = $block->getItemCollection()->getItems();
            $limit = $block->getItemLimit('upsell');
            $shuffle = 0;

            $showAddTo = false;
            $showCart = false;
            $templateType = null;
            $description = false;
            $canItemsAddToCart = false;
        }
    break;

    case 'crosssell-rule':
        /** @var \Magento\Catalog\Block\Product\ProductList\Crosssell $block */
        if ($exist = $block->hasItems()) {
            $type = 'crosssell';
            $class = $type;

            $image = 'cart_cross_sell_products';
            $title = __('More Choices:');
            $items = $block->getItemCollection();

            $showAddTo = true;
            $showCart = true;
            $templateType = \Magento\Catalog\Block\Product\ReviewRendererInterface::SHORT_VIEW;
            $description = false;
            $canItemsAddToCart = false;
        }
    break;

    case 'crosssell':
        /** @var \Magento\Catalog\Block\Product\ProductList\Crosssell $block */
        if ($exist = $block->getItemCount()) {
            $type = 'crosssell';
            $class = $type;

            $image = 'cart_cross_sell_products';
            $title = __('More Choices:');
            $items = $block->getItems();

            $showAddTo = true;
            $showCart = true;
            $templateType = \Magento\Catalog\Block\Product\ReviewRendererInterface::SHORT_VIEW;
            $description = false;
            $canItemsAddToCart = false;
        }
    break;

    case 'new':
        if ($exist = $block->getProductCollection()) {
            $type = 'new';
            $mode = 'grid';
            $type = $type . ' ' . $mode;

            $class = 'widget' . ' ' . $type;

            $image = 'new_products_content_widget_grid';
            $title = __('New Products');
            $items = $exist;

            $showAddTo = true;
            $showCart = true;
            $templateType = \Magento\Catalog\Block\Product\ReviewRendererInterface::SHORT_VIEW;
            $description = ($mode == 'list') ? true : false;
            $canItemsAddToCart = false;
        }
    break;

    case 'other':
    break;
}
?>

<?php if ($exist): ?>
    <?php if ($type == 'related' || $type == 'upsell'): ?>
        <?php if ($type == 'related'): ?>
            <div
                class="block <?php /* @escapeNotVerified */ echo $class; ?>"
                data-mage-init='{"relatedProducts":{"relatedCheckbox":".related.checkbox"}}'
                data-limit="<?php /* @escapeNotVerified */ echo $limit; ?>"
                data-shuffle="<?php /* @escapeNotVerified */ echo $shuffle; ?>"
            >
        <?php else: ?>
            <div
                class="block <?php /* @escapeNotVerified */ echo $class; ?>"
                data-mage-init='{"upsellProducts":{}}'
                data-limit="<?php /* @escapeNotVerified */ echo $limit; ?>"
                data-shuffle="<?php /* @escapeNotVerified */ echo $shuffle; ?>"
            >
        <?php endif; ?>
    <?php else: ?>
        <div class="block <?php /* @escapeNotVerified */ echo $class; ?>">
    <?php endif; ?>

        <?=$this->getLayout()->createBlock(
            'Creativestyle\FrontendExtension\Block\Twig', 'carousels-headline-'.$type, [
                'data' => [
                    'title' => $title
                ]
            ]
        )->setTemplate("headline/headline.twig")->toHtml(); ?>

        <div class="cs-products-promo">
            <div class="cs-products-promo__carousel">
                <div class="cs-products-promo__wrapper">
                    <ul class="cs-products-promo__slides">

                        <?php
                            $iterator = 1;
                            $csProductHelper = $this->helper('Creativestyle\FrontendExtension\Helper\Product');
                            $indicatorsHelper = $this->helper('Creativestyle\ProductPositiveIndicatorsExtension\Helper\Product');
                            $badgeHelper = $this->helper('Creativestyle\FrontendExtension\Helper\Product');
                            $dailyDealHelper = $this->helper('Creativestyle\DailyDealExtension\Helper\OfferData');
                            foreach ($items as $item): ?>

                            <?php
                                $getIsSaleable = $item->getIsSalable();
                                $getId = $item->getId();
                                $getAddToCartUrl = $block->getAddToCartUrl($item);
                                $productName = $block->escapeHtml($item->getName());
                                $isPopular = $indicatorsHelper->getPopularIconFlag($item->getId());
                                $isFreeShipped = ($indicatorsHelper->isFreeShipped($item) && $indicatorsHelper->showFreeShippingInProductTiles());
                                $dailyDealData = $dailyDealHelper->prepareOfferData($item);
                                $newBadge = $badgeHelper->isNew($item);
                                $discount = $badgeHelper->getSalePercentage($item);
                                $badges = [];
                                $dailyDealHtml = '';
                                $priceHtmlDefault = $block->getProductPrice($item);
                                $priceHtmlDeal = $dailyDealData && $dailyDealData['deal'] ? $dailyDealData['oldPriceHtmlOnTile'] : '';
                                $oldDiscount = $dailyDealData && $dailyDealData['deal'] ? $dailyDealData['oldDiscount'] : '';
                                $priceHtml = $dailyDealData && $dailyDealData['deal'] && $dailyDealData['displayType'] === 'badge_counter' ? $priceHtmlDefault . $priceHtmlDeal : $priceHtmlDefault;

                                if($dailyDealData && $dailyDealData['deal'] && $dailyDealData['displayType'] !== 'none') {
                                    if($dailyDealData['displayType'] === 'badge') {
                                        $itemsLimit = $dailyDealData['items'] && $dailyDealData['items'] > 0 ? '<span class="cs-badge">
                                            <span class="cs-badge__span">' . __('%1 item(s) left', $dailyDealData['items']) . '</span>
                                        </span>' : '';
                                        $badges[] = [
                                            'mix' => 'cs-multiple-badges',
                                            'content' => '<span class="cs-badge cs-badge--attention cs-badge--cut cs-badge--limited-offer">
                                                    <span class="cs-badge__span">' . __('Limited offer!') . ' </span>
                                                </span>' . $itemsLimit
                                        ];
                                    } else {
                                        $dailyDealHtml = $this->getLayout()->createBlock('Creativestyle\FrontendExtension\Block\Twig', 'grid-product-dailydeal-'.$type.'-'.$iterator, [
                                                'data' => [
                                                    'namespace' => 'cs-',
                                                    'mix' => 'cs-dailydeal--tile',
                                                    'header' => [
                                                        'show' => true,
                                                    ],
                                                    'items' => [
                                                        'textBefore' => '',
                                                        'textAfter' => __('items left'),
                                                        'amount' => $dailyDealData['items']
                                                    ],
                                                    'deal' => [
                                                        'end' => $dailyDealData['to']
                                                    ]
                                                ]
                                            ]
                                        )->setTemplate("dailydeal/dailydeal.twig")->toHtml();
                                    }
                                }

                                if ( $isPopular ) {
                                    $badges[] = [
                                        'content' => '<span class="cs-badge cs-badge--positive">
                                            <span class="cs-badge__span">' . __('Popular') . '</span>
                                        </span>'
                                    ];
                                }

                                if ( $isFreeShipped ) {
                                    $badges[] = [
                                        'content' => '<span class="cs-badge cs-badge--cut cs-badge--positive">
                                            <span class="cs-badge__span">' . __('Free Shipping') . '</span>
                                        </span>'
                                    ];
                                }

                                if( $discount ) {
                                    $oldDiscountHtml = $dailyDealData && $dailyDealData['deal'] && $dailyDealData['displayType'] === 'badge_counter' ? '<span class="cs-badge cs-badge--discount cs-badge--discount_old" style="display: none;">
                                        <span class="cs-badge__span">'  . $oldDiscount . '%</span>
                                    </span>' : '';
                                    $badges[] = [
                                        'content' => '<span class="cs-badge cs-badge--discount">
                                            <span class="cs-badge__span">'  . $discount . '%</span>
                                        </span>' . $oldDiscountHtml
                                    ];

                                }

                                if ( $newBadge ) {
                                    $badges[] = [
                                        'content' => '<span class="cs-badge cs-badge--new">
                                            <span class="cs-badge__span">' . __('New') . '</span>
                                        </span>'
                                    ];
                                }

                                $data = [
                                    'lazyload' => $iterator > 9,
                                    'showWrapper' => false,
                                    'url' => $block->getProductUrl($item),
                                    'image' => [
                                        'src' => $this->helper('Magento\Catalog\Helper\Image')->init($item, $image)->getUrl(),
                                        'alt' => $productName
                                    ],
                                    'name' => $productName,
                                    'price' => [
                                        'mix' => $dailyDealData && $dailyDealData['deal'] && $dailyDealData['displayType'] === 'badge_counter' ? 'cs-grid-product__price--dailydeal-countdown' : '',
                                        'content' => $priceHtml
                                    ],
                                    'badges' => $badges,
                                    'addons' => [
                                        'right' => [
                                            [
                                                'mix' => $getIsSaleable ? 'cs-grid-product__addon--in-stock' : 'cs-grid-product__addon--out-of-stock',
                                                'content' => $getIsSaleable ? __('In stock') : __('Out of stock')
                                            ]
                                        ]
                                    ],
                                    'hotspots' => [
                                        'after' => [
                                            'badges' => $dailyDealHtml
                                        ]
                                    ]
                                ];

                                $ratingData = $csProductHelper->getReviewSummary($item)['data'];

                                if($ratingData['activeStars']):
                                    $data['addons']['left'][] = [
                                        'mix' => 'cs-grid-product__addon--rating',
                                        'content' => $this->getLayout()->createBlock('Creativestyle\FrontendExtension\Block\Twig', 'grid-product-rating-'.$type.'-'.$iterator, [
                                                'data' => [
                                                    'namespace' => 'cs-',
                                                    'maxStars' => $ratingData['maxStars'],
                                                    'activeStars' => $ratingData['activeStars'],
                                                    'text' => '('.$ratingData['count'].')'
                                                ]
                                            ]
                                        )->setTemplate("star-rating/star-rating.twig")->toHtml()
                                    ];
                                endif; 
                                $data['addons']['left'][] = [
                                    'content' => sprintf(
                                        '<ul class="cs-links-block-addto" data-role="add-to-links">
                                                                <li class="cs-links-block-addto__item">
                                                                    <a
                                                                        href="#"
                                                                        class="cs-links-block-addto__link towishlist"
                                                                        title="%s"
                                                                        aria-label="%s"
                                                                        data-post=\'%s\'
                                                                        data-action="add-to-wishlist"
                                                                        role="button"
                                                                    >
                                                                        <svg class="cs-links-block-addto__icon cs-links-block-addto__icon--wishlist">
                                                                            <use xlink:href="#heart"></use>
                                                                        </svg>
                                                                        %s

                                                                    </a>
                                                                </li>
                                                            </ul>',
                                        $block->escapeHtml(__('Add to Wish List')),
                                        $block->escapeHtml(__('Add to Wish List')),
                                        $block->getAddToWishlistParams($item),
                                        __('Add to Wishlist')
                                    )
                                ];

                                ?>

                                <?php if ($showCart && $getIsSaleable):
                                    if ($item->getTypeInstance()->hasRequiredOptions($item)):
                                        $jsonData = '{"redirectUrl": {"url": "'.$getAddToCartUrl.'"}}';
                                        $data['addons']['bottom'][] = [
                                            'content' => sprintf(
                                                '<button
                                                    class="cs-button cs-button--look_light cs-button--type_wide"
                                                    data-mage-init=\'%s\'
                                                    type="button"
                                                    title="%s"
                                                >%s</button>',
                                                $jsonData,
                                                __('Add to Cart'),
                                                __('Add to Cart')
                                            )
                                        ]; ?>
                                    <?php else:
                                        $postDataHelper = $this->helper('Magento\Framework\Data\Helper\PostHelper');
                                        $postData = $postDataHelper->getPostData($getAddToCartUrl, ['product' => $item->getEntityId()]);
                                        $data['addons']['bottom'][] = [
                                            'content' => sprintf(
                                                '<button
                                                    class="cs-button cs-button--look_light cs-button--type_wide"
                                                    data-post=\'%s\'
                                                    type="button"
                                                    title="%s"
                                                    >%s</button>',
                                                $postData,
                                                __('Add to Cart'),
                                                __('Add to Cart')
                                                )
                                        ]
                                    ?>
                                <?php endif;
                            endif; ?>

                            <li class="cs-products-promo__slide | cs-grid-product cs-grid-product--in-carousel">
                                <?=$this->getLayout()->createBlock(
                                    'Creativestyle\FrontendExtension\Block\Twig', 'grid-product-'.$type.'-'.$iterator, [
                                        'data' => $data
                                    ]
                                )->setTemplate("grid-product/grid-product.twig")->toHtml(); ?>
                            </li>

                            <?php $iterator++; ?>
                        <?php endforeach ?>
                    </ul>
                </div>

                <button class="cs-products-promo__nav cs-products-promo__nav--prev" type="button">
                    <svg class="cs-products-promo__nav-icon">
                        <use xlink:href="#icon_arrow-left"></use>
                    </svg>
                </button>
                <button class="cs-products-promo__nav cs-products-promo__nav--next" type="button">
                    <svg class="cs-products-promo__nav-icon">
                        <use xlink:href="#icon_arrow-right"></use>
                    </svg>
                </button>

                <ul class="cs-products-promo__pagination"></ul>
            </div>
        </div>
    </div>
<?php endif;?>
