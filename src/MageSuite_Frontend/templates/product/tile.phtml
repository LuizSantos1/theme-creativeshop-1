<?php extract($block->getData()); ?>
<li class="<?php echo /* @escapeNotVerified */ $viewModeClass; ?>__brick <?php if($showHeroProduct): ?><?php echo $viewModeClass; ?>__brick--teaser <?php echo $viewModeClass; ?>__brick--x2 <?php echo $viewModeClass; ?>__brick--y2<?php endif; ?>">
    <div class="cs-product-tile<?php if ($showHeroProduct): ?> cs-product-tile--hero<?php endif; ?>">
        <?php
        $productImageSrcset = $productImageUrl . ' 1x, ' . $productImageUrl2x . ' 2x';
        $productNameStripped = $block->stripTags($product->getName(), null, true);
        $getIsSalable = $salabilityStatus[$product->getId()];
        $newBadge = $badgeHelper->isNew($product);
        $discount = $badgeHelper->getSalePercentage($product);
        $isPopular = $indicatorsHelper->getPopularIconFlag($product->getId());
        $isFreeShipped = ($indicatorsHelper->isFreeShipped($product) && $indicatorsHelper->showFreeShippingInProductTiles());
        $dailyDealData = $dailyDealHelper->prepareOfferData($product);
        $badges = [];
        $dailyDealHtml = '';
        $priceHtmlDefault = $block->getProductPrice($product);
        $priceHtmlDeal = $dailyDealData && $dailyDealData['deal'] ? $dailyDealData['oldPriceHtmlOnTile'] : '';
        $oldDiscount = $dailyDealData && $dailyDealData['deal'] ? $dailyDealData['oldDiscount'] : '';
        $priceHtml = $dailyDealData && $dailyDealData['deal'] && $dailyDealData['displayType'] === 'badge_counter' ? $priceHtmlDefault . $priceHtmlDeal : $priceHtmlDefault;

        if($dailyDealData && $dailyDealData['deal'] && $dailyDealData['displayType'] !== 'none') {
            if($dailyDealData['displayType'] === 'badge') {
                $itemsLimit = $dailyDealData['items'] && $dailyDealData['items'] > 0 ? '<span class="cs-product-tile__badge cs-product-tile__badge--items-left">
                    <span class="cs-product-tile__badge-text">' . __('%1 item(s) left', $dailyDealData['items']) . '</span>
                </span>' : '';
                $badges[] = [
                    'mix' => 'cs-multiple-badges',
                    'content' => '<span class="cs-product-tile__badge cs-product-tile__badge-text--limited-offer">
                            <span class="cs-product-tile__badge-text">' . __('Limited offer!') . ' </span>
                        </span>' . $itemsLimit
                ];
            } else {
                $dailyDealHtml = $this->getLayout()->createBlock('MageSuite\Frontend\Block\Twig', 'product-tile-dailydeal-'.$iterator, [
                        'data' => [
                            'namespace' => 'cs-',
                            'mix' => 'cs-dailydeal--tile',
                            'header' => [
                                'show' => true,
                            ],
                            'items' => [
                                'textBefore' => '',
                                'textAfter' => __('item(s) left'),
                                'amount' => $dailyDealData['items']
                            ],
                            'deal' => [
                                'end' => $dailyDealData['to']
                            ]
                        ]
                    ]
                )->setTemplate("dailydeal/dailydeal.twig")->toHtml();
            }
        }

        if( $discount ) {
            $oldDiscountHtml = $dailyDealData && $dailyDealData['deal'] && $dailyDealData['displayType'] === 'badge_counter' ? '<span class="cs-product-tile__badge cs-product-tile__badge--discount" style="display: none;">
                <span class="cs-product-tile__badge-text">'  . $oldDiscount . '%</span>
            </span>' : '';
            $badges[] = [
                'content' => '<span class="cs-product-tile__badge cs-product-tile__badge--discount">
                    <span class="cs-product-tile__badge-text">'  . $discount . '%</span>
                </span>' . $oldDiscountHtml
            ];

        }

        if ( $newBadge ) {
            $badges[] = [
                'content' => '<span class="cs-product-tile__badge cs-product-tile__badge--new">
                    <span class="cs-product-tile__badge-text">' . __('New') . '</span>
                </span>'
            ];
        }

        if ( $isPopular ) {
            $badges[] = [
                'content' => '<span class="cs-product-tile__badge cs-product-tile__badge--popular">
                    <span class="cs-product-tile__badge-text">' . __('Popular') . '</span>
                </span>'
            ];
        }

        if ( $isFreeShipped ) {
            $badges[] = [
                'content' => '<span class="cs-product-tile__badge cs-product-tile__badge--free-shipping">
                    <span class="cs-product-tile__badge-text">' . __('Free Shipping') . '</span>
                </span>'
            ];
        }

        $data = [
            'lazyload' => $iterator > 9,
            'url' => $product->getProductUrl(),
            'image' => [
                'src' => $productImageUrl,
                'srcset' => $productImageSrcset,
                'alt' => $productNameStripped,
                'width' => '216',
                'height' => '270'
            ],
            'name' => $helper->productAttribute($product, $product->getName(), 'name'),
            'price' => [
                'mix' => $dailyDealData && $dailyDealData['deal'] && $dailyDealData['displayType'] === 'badge_counter' ? 'cs-product-tile__price--dailydeal-countdown' : '',
                'content' => $priceHtml
            ],
            'swatches' => [
                'content' => $block->getProductDetailsHtml($product)
            ],
            'addons' => [
                'right' => [
                    [
                        'mix' => $getIsSalable ? 'cs-product-tile__addon--in-stock' : 'cs-product-tile__addon--out-of-stock',
                        'content' => $getIsSalable ? __('In stock') : __('Out of stock')
                    ]
                ]
            ],
            'badges' => $badges,
            'hotspots' => [
                'after' => [
                    'badges' => $dailyDealHtml
                ]
            ]
        ];

        $ratingData = $csProductHelper->getReviewSummary($product)['data'];
        if($ratingData['activeStars']):
            $data['addons']['left'][] = [
                'mix' => 'cs-product-tile__addon--rating',
                'content' => $this->getLayout()->createBlock('MageSuite\Frontend\Block\Twig', 'product-tile-rating-'.$iterator, [
                        'data' => [
                            'namespace' => 'cs-',
                            'maxStars' => $ratingData['maxStars'],
                            'activeStars' => $ratingData['activeStars'],
                            'text' => '('.$ratingData['count'].')'
                        ]
                    ]
                )->setTemplate("star-rating/star-rating.twig")->toHtml()
            ];
        endif;

        $data['addons']['left'][] = [
            'content' => sprintf(
                '<ul class="cs-links-block-addto" data-role="add-to-links">
                    <li class="cs-links-block-addto__item">
                        <a
                            href="#"
                            class="cs-links-block-addto__link towishlist"
                            title="%s"
                            aria-label="%s"
                            data-post=\'%s\'
                            data-action="add-to-wishlist"
                            role="button"
                        >
                            <svg class="cs-links-block-addto__icon cs-links-block-addto__icon--wishlist">
                                <use xlink:href="#heart"></use>
                            </svg>
                            %s

                        </a>
                    </li>
                </ul>',
                $block->escapeHtml(__('Add to Wish List')),
                $block->escapeHtml(__('Add to Wish List')),
                $block->getAddToWishlistParams($product),
                __('Add to Wishlist')
            )
        ];

        echo $this->getLayout()->createBlock(
            'MageSuite\Frontend\Block\Twig', 'product-tile-'.$iterator, [
                'data' => $data
            ]
        )->setTemplate("product-tile/product-tile.twig")->toHtml(); ?>
    </div>
</li>
